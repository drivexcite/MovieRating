apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: grafana            
  name: grafana
  namespace: tona-monitoring-ns
---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app: grafana            
  name: grafana-clusterrole
rules: []
---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: grafana-clusterrolebinding
  labels:
    app: grafana            
subjects:
  - kind: ServiceAccount
    name: grafana
    namespace: tona-monitoring-ns
roleRef:
  kind: ClusterRole
  name: grafana-clusterrole
  apiGroup: rbac.authorization.k8s.io
---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: grafana
  namespace: tona-monitoring-ns
  labels:
    app: grafana            
rules:
- apiGroups:      ['extensions']
  resources:      ['podsecuritypolicies']
  verbs:          ['use']
  resourceNames:  [grafana]
---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: grafana
  namespace: tona-monitoring-ns
  labels:
    app: grafana            
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: grafana
subjects:
- kind: ServiceAccount
  name: grafana
  namespace: tona-monitoring-ns
---

apiVersion: v1
kind: Secret
metadata:
  name: grafana-credentials
  namespace: tona-monitoring-ns
  labels:
    app: grafana            
type: Opaque
data:
  admin-user: "YWRtaW4="
  admin-password: "dko0UXplczJVTEsyVXp3OTl2d2tqNjh1N0RvYzNiQVFRc3B0Y1I2Rw=="
  ldap-toml: ""

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: tona-monitoring-ns
  labels:
    app: grafana            
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/data
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
---

apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: grafana
  namespace: tona-monitoring-ns
  labels:
    app: grafana            
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana      
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
    spec:
      serviceAccountName: grafana
      securityContext:
        fsGroup: 472
        runAsUser: 472
        
      containers:
        - name: grafana
          image: "grafana/grafana:6.3.4"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: storage
              mountPath: "/var/lib/grafana"
          ports:
            - name: service
              containerPort: 80
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: admin-password
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
            
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            
      volumes:
        - name: config
          configMap:
            name: grafana-config
        - name: storage
          emptyDir: {}
---

apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: tona-monitoring-ns
  labels:
    app: grafana            
spec:
  type: ClusterIP
  ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app: grafana